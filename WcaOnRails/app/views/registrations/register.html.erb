<% provide(:title, I18n.t('registrations.new_registration.title', comp: @competition.name)) %>

<%= render layout: "nav" do %>
  <% opens_in_days = distance_of_time_in_words_to_now(@competition.registration_open) %>
  <% closes_in_days = distance_of_time_in_words_to_now(@competition.registration_close) %>
  <% unless @competition.registration_opened? %>
    <% if @competition.registration_not_yet_opened? %>
      <%= alert :info, t('registrations.will_open_html', days: opens_in_days, time: wca_local_time(@competition.registration_open)) %>
    <% end %>
    <% if @competition.registration_past? %>
      <%= alert :danger, t('registrations.closed_html', days: closes_in_days, time: wca_local_time(@competition.registration_close)) %>
    <% end %>
  <% else %>
    <%= alert :info, t('registrations.will_close_html', days: closes_in_days, time: wca_local_time(@competition.registration_close)) %>
  <% end %>

  <% unless current_user %>
    <% if @competition.registration_past? %>
      <%= t 'registrations.please_sign_in_past_html',
        sign_in: link_to(t('registrations.sign_in'), competition_register_require_sign_in_path(@competition)),
        here: link_to(t('common.here'), new_user_registration_path, target: "_blank") %>
    <% elsif @competition.registration_not_yet_opened? %>
      <%= t 'registrations.please_sign_in_not_yet_open_html',
        sign_in: link_to(t('registrations.sign_in'), competition_register_require_sign_in_path(@competition)),
        here: link_to(t('common.here'), new_user_registration_path, target: "_blank") %>
    <% else %>
      <%= t 'registrations.please_sign_in_html',
        sign_in: link_to(t('registrations.sign_in'), competition_register_require_sign_in_path(@competition)),
        comp: @competition.name,
        here: link_to(t('common.here'), new_user_registration_path, target: "_blank") %>
    <% end %>
  <% else %>

    <% if @competition.registration_opened? %>
      <% if current_user.preferred_events.empty? %>
        <%= alert :info, t('registrations.preferred_events_prompt_html', link: link_to(t('common.here'), profile_edit_path(section: :preferences))) %>
      <% end %>
      <p>
      <%= t 'registrations.greeting', name: current_user.name %>
      </p>

      <% if current_user.cannot_register_for_competition_reasons.length > 0 %>
        <%= alert :danger do %>
          <%= t 'registrations.please_fix_profile_html', comp: @competition.name,
                profile: link_to(t('registrations.profile'), profile_edit_path) %>
          <ul>
            <% current_user.cannot_register_for_competition_reasons.each do |reason| %>
              <li><%= reason %></li>
            <% end %>
          </ul>
        <% end %>
      <% else %>
        <div>
          <% entry_fee = humanized_money_with_symbol @registration.entry_fee %>
          <% paid_entry_fees = humanized_money_with_symbol @registration.paid_entry_fees %>
          <% outstanding_entry_fees = humanized_money_with_symbol @registration.outstanding_entry_fees %>
          <% if @registration.new_or_deleted? %>
            <%= t 'registrations.can_register', comp: @competition.name %>
            <%= alert :danger, t('registrations.check_registration_information') %>
            <%= render 'entry_fee', entry_fee: entry_fee %>
          <% else %>
            <%= t 'registrations.have_registered', comp: @competition.name %>

            <% if !current_user.can_edit_registration?(@registration) %>
              <%= t 'registrations.contact_organizer' %>
            <% end %>

            <% if @registration.pending? %>
              <% waiting_list_info = @registration.waiting_list_info %>
              <%= alert :warning, t('registrations.waiting_list', i: waiting_list_info.index + 1, n: waiting_list_info.length) %>
            <% else %>
              <%= alert :success, t('registrations.accepted') %>
            <% end %>
            <div>
              <% if @competition.connected_stripe_account_id %>
                <% if @registration.outstanding_entry_fees > 0 %>
                  <% if @registration.paid_entry_fees > 0 %>
                    <%= alert :info, t('registrations.entry_fees_partially_paid', paid: paid_entry_fees, total_entry_fee: entry_fee) %>
                  <% end %>
                  <hr />
                  <%= horizontal_simple_form_for :payment, url: competition_process_payment_path, html: { id: :form_payment } do |f| %>
                    <%= f.input :stripeToken, as: :hidden, input_html: { id: :stripeToken } %>
                    <%= f.input :total_amount, as: :hidden, input_html: { id: :total_amount } %>
                    <%= f.input :outstanding_entry_fees, disabled: true, input_html: { value: @registration.outstanding_entry_fees.cents, id: :outstanding_entry_fees } %>
                    <%= f.input :donation, input_html: { value: 0, id: :donation } %>
                    <div class="form-group">
                      <div class="col-sm-offset-2 col-sm-10">
                        <%= f.button :submit, value: "Pay registration fees by card", id: :donateButton, class: 'btn btn-primary' %>
                      </div>
                    </div>
                    <script src="https://checkout.stripe.com/checkout.js"></script>
                    <script>
                    // As per the javascript suggested here: https://stripe.com/docs/recipes/variable-amount-checkout#javascript
                      var handler = StripeCheckout.configure({
                        key: '<%= ENVied.STRIPE_PUBLISHABLE_KEY %>',
                        locale: 'auto',
                        image: 'https://www.worldcubeassociation.org/files/WCALogo3Dsmall.png',
                        name: 'World Cube Association',
                        description: 'Registration fee',
                        currency: '<%= @registration.outstanding_entry_fees.currency.iso_code %>',
                        zipCode: true,
                        token: function(token) {
                          $('input#stripeToken').val(token.id);
                          $('#form_payment').submit();
                        }
                      });
                      // Setup the currency mask on the fee field
                      $(function() {
                        var currency_code = "<%= @registration.outstanding_entry_fees.currency.iso_code %>";
                        wca.applyCurrencyMask('init',
                                              '#outstanding_entry_fees',
                                              currency_code);
                        wca.applyCurrencyMask('init',
                                              '#donation',
                                              currency_code);
                      });

                      $('#donateButton').on('click', function(e) {
                        e.preventDefault();
                        var registration_fees_to_pay = <%= @registration.outstanding_entry_fees.cents %>;
                        var donation = wca.getValueInCurrency('#donation');
                        var amount = parseFloat(registration_fees_to_pay+donation);
                        if (isNaN(amount)) {
                          alert('Please enter a valid amount in USD ($).');
                        } else if (amount < registration_fees_to_pay) {
                          alert('Amount must be be at least the registration fees to pay.');
                        } else {
                          $('#total_amount').val(amount);
                          handler.open({
                            amount: Math.round(amount)
                          })
                        }
                      });
                    </script>
                  <% end %><%# end of simple_form %>
                <% else %>
                  <%= alert :success, t('registrations.entry_fees_fully_paid', paid: paid_entry_fees) %>
                <% end %><%# end of @registration.outstanding_entry_fees > 0 %>
              <% else %>
                <%= render 'entry_fee', entry_fee: entry_fee %>
              <% end %>
              <hr />
            </div>
          <% end %>
        </div>


        <% url = @registration.new_record? ? competition_registrations_path(@competition)
                                           : registration_path(@registration) %>
        <%= horizontal_simple_form_for @registration, url: url, html: { class: 'are-you-sure no-submit-on-enter' } do |f| %>

          <% selected_events = @registration.saved_and_unsaved_events.empty? ? @registration.user.preferred_events : @registration.saved_and_unsaved_events %>
          <%= render "shared/associated_events_picker", form_builder: f, disabled: !current_user.can_edit_registration?(@registration),
                      events_association_name: :registration_competition_events, allowed_events: @competition.events, selected_events: selected_events %>

          <% if @competition.guests_enabled? %>
            <%= f.input :guests, disabled: !current_user.can_edit_registration?(@registration) %>
          <% end %>

          <%= f.input :comments, disabled: !current_user.can_edit_registration?(@registration) %>

          <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10">
              <% if @registration.new_or_deleted? %>
                <%= f.submit t('registrations.register'), class: "btn btn-success" %>
              <% elsif current_user.can_edit_registration?(@registration) %>
                <%= f.submit t('registrations.update'), class: "btn btn-success" %>
                <%= link_to t('registrations.delete'), registration_path(@registration, user_is_deleting_theirself: true), method: :delete, class: "btn btn-danger", data: { confirm: t('registrations.delete_confirm'), toggle: "tooltip" }, title: t('registrations.delete_registration') %>
              <% end %>
            </div>
          </div>
        <% end %>
      <% end %>

    <% end %>
  <% end %>
<% end %>
