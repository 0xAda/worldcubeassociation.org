<%# Generate round informations for the competition %>
<% rounds_by_wcif_id = Hash[competition.rounds.map { |r| [r.wcif_id, r.to_string_map] }] %>
<script>
  var roundsByWcifId = <%= raw(rounds_by_wcif_id.to_json) %>;
  var dataByVenueId = {};
</script>
<ul class="nav nav-pills nav-justified">
  <% competition.competition_venues.each_with_index do |venue, index| %>
    <li class="<%= (index == 0) ? "active" : "" %>"><a href="#schedule-venue-<%= venue.id %>" data-toggle="pill"><%= venue.name %></a></li>
  <% end %>
</ul>
<div class="tab-content" id="schedule-tab">
  <% competition.competition_venues.each_with_index do |venue, index| %>
    <%
      activities = venue.all_activities
      min_time, max_time = first_and_last_time_from_activities(activities, venue.timezone_id)
      activities.map!{ |a| a.to_event(rounds_by_wcif_id) }
    %>
    <script>
      dataByVenueId["<%= venue.id %>"] = {
        events: <%= raw(activities.to_json) %>,
        minTime: "<%= min_time %>",
        maxTime: "<%= max_time %>",
      }
    </script>
    <div class="tab-pane <%= (index == 0) ? "active" : "" %>" id="schedule-venue-<%= venue.id %>" data-venue="<%= venue.id %>">
      <p>
        <%= t("competitions.schedule.venue_information_html", venue_name: link_to_google_maps_place(venue.name, venue.latitude_degrees, venue.longitude_degrees)) %>
        <br />
        <%= t("competitions.schedule.timezone_message", timezone: venue.timezone_id) %>
        <% if competition.competition_venues.size > 1 %>
          <br />
          <%= t("competitions.schedule.multiple_venues_available") %>
        <% end %>
      </p>
      <% venue_rooms = venue.venue_rooms %>
      <div class="row">
        <div class="col-xs-12 col-md-6">
          <%= t("competitions.schedule.display_as.label") %>
          <div class="list-group">
            <a class="list-group-item active schedule-table-link" data-venue="<%= venue.id %>" href="#">
              <%= t("competitions.schedule.display_as.table") %>
            </a>
            <a class="list-group-item schedule-calendar-link" data-venue="<%= venue.id %>" href="#">
              <%= t("competitions.schedule.display_as.calendar") %>
            </a>
          </div>
        </div>
        <%# We want to keep these elements in the html for the event filter. %>
        <div class="col-xs-12 col-md-6 <%= "hidden" if venue.venue_rooms.size <= 1 %>">
          <%= t("competitions.schedule.display_for_room") %>
          <div class="list-group" id="room-list-<%= venue.id %>">
            <% venue_rooms.each do |r| %>
              <a class="list-group-item room-entry selected toggle-room"
                 href="#" data-room="<%= r.id %>" data-venue="<%= venue.id %>">
                 <div class="room-checkbox">
                   <div class="room-checkbox-bg" style="background-color:<%= r.color %>;"></div>
                 </div>
                 <div class="room-name">
                  <%= r.name %>
                 </div>
              </a>
            <% end %>
          </div>
        </div>
        <div class="col-xs-12">
          <div class="panel panel-default panel-events-filter">
            <div class="panel-body">
              <div class="events-filter" data-venue="<%= venue.id %>">
                <div class="event-all selected">ALL</div>
                <% competition.events.each do |e| %>
                  <span data-event="<%= e.id %>" class="cubing-icon fa-fw selected event-<%= e.id %>"></span>
                <% end %>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="schedule_table_container">
        <%= render "competition_schedule_for_venue_table", competition: competition, rounds_by_wcif_id: rounds_by_wcif_id, activities: activities %>
      </div>
      <div class="schedule_calendar_container" style="display: none;">
        <div id="calendar-venue-<%= venue.id %>"></div>
      </div>
    </div>
  <% end %>
  <div class="time-limit-information">
    <h4 id="time-limit"><%= t("competitions.schedule.time_limit") %></h4>
    <p>
      <%= t("competitions.schedule.time_limit_information.time_limit_html",
            regulation_link: link_to(t("competitions.schedule.time_limit_information.regulation_link_text", number: "A1a4"), regulations_path + "#A1a4", target: "_blank")) %>
      <br/>
      <% cumulative_one_round = "<strong id='cumulative-time-limit'>#{t("competitions.schedule.time_limit_information.cumulative_time_limit")}</strong>" %>
      <%= t("competitions.schedule.time_limit_information.cumulative_one_round_html",
            cumulative_time_limit: raw(cumulative_one_round),
            regulation_link: link_to(t("competitions.schedule.time_limit_information.regulation_link_text", number: "A1a2"), regulations_path + "#A1a2", target: "_blank")) %>
      <br/>
      <% cumulative_across_rounds = "<strong id='cumulative-across-rounds-time-limit'>#{t("competitions.schedule.time_limit_information.cumulative_time_limit")}</strong>" %>
      <%= t("competitions.schedule.time_limit_information.cumulative_across_rounds_html",
            cumulative_time_limit: raw(cumulative_across_rounds),
            guideline_link: link_to(t("competitions.schedule.time_limit_information.guideline_link_text", number: "A1a2++"), regulations_path + "/guidelines.html#A1a2++", target: "_blank")) %>
    </p>

    <h4 id="cutoff"><%= t("competitions.schedule.cutoff") %></h4>
    <p>
      <%= t("competitions.schedule.time_limit_information.cutoff_html",
            regulation_link: link_to(t("competitions.schedule.time_limit_information.regulation_link_text", number: "9g"), regulations_path + "#9g", target: "_blank")) %>
    </p>
  </div>
</div>
<script>
  function fetchCalendarEvents(venueId, start, end, timezone, callback) {
    // We don't really care about timezone or start/end as we only have events for a specific competition and venue.
    var venueData = dataByVenueId[venueId];
    var allEvents = venueData.events;
    var rooms = $("#room-list-" + venueId).find(".selected");
    var events = _.flatMap(rooms, function(room) {
      let roomId = $(room).data("room");
      return _.filter(allEvents, { roomId });
    });
    var selectedEvents = _.map($("#schedule-venue-" + venueId + " .events-filter > span.selected"), e => $(e).data("event").toString());
    events = _.filter(events, e => selectedEvents.includes(e.activityDetails.event_id));
    callback(events);
  }

  function popoverContentFromData(eventData) {
    let roundId = `${eventData.activityDetails.event_id}-r${eventData.activityDetails.round_number}`;
    let roundData = roundsByWcifId[roundId];
    let content = `<div class="row"><div class="col-xs-12 room-name">${eventData.roomName}</div></div>`;
    if (!roundData) {
      return null;
    }
    // If we have round data, format and time limit are mandatory
    content += `<div class="row"><div class="col-xs-4"><%= t("competitions.schedule.format") %></div><div class="col-xs-8"><strong>${roundData.format_name}</strong></div></div>`;
    let time_limit_text = roundData.time_limit;
    if (roundData.cumulative_round_ids.length == 1) {
      time_limit_text += `<%= link_to "*", "#cumulative-time-limit" %>`;
    } else if (roundData.cumulative_round_ids.length > 1) {
      time_limit_text += `<%= link_to "**", "#cumulative-across-rounds-time-limit" %>`;
    }
    content += `<div class="row"><div class="col-xs-4"><%= t("competitions.schedule.time_limit") %></div><div class="col-xs-8"><strong>${time_limit_text}</strong></div></div>`;
    if (roundData.cutoff.length > 0) {
      content += `<div class="row"><div class="col-xs-4"><%= t("competitions.schedule.cutoff") %></div><div class="col-xs-8"><strong>${roundData.cutoff}</strong></div></div>`;
    }
    if (roundData.advancement.length > 0) {
      content += `<div class="row"><div class="col-xs-4"><%= t("competitions.schedule.proceed") %></div><div class="col-xs-8"><strong>${roundData.advancement}</strong></div></div>`;
    }
    return content;
  }

  function initFullCalendar($elem, venueId) {
    var venueData = dataByVenueId[venueId];
    var options = {
      events: _.partial(fetchCalendarEvents, venueId),
      eventDataTransform: function(eventData) {
        if (eventData.activityDetails.event_id.startsWith("other")) {
          eventData.color = "#666";
        }
        return eventData;
      },
      eventRender: function(event, element) {
        let popoverContent = popoverContentFromData(event);
        if (!popoverContent) {
          return;
        }
        $(element).addClass("has-popover");
        $(element).click(function(e) {
          $(this).popover("toggle");
          e.stopPropagation();
        });
        $(element).popover({
          title: `<strong>${event.title}</strong>`,
          container: "body",
          html: true,
          content: `<div class="round-info-popover">${popoverContentFromData(event)}</div>`,
          trigger: "manual",
          placement: "top",
        });
      },
      defaultView: 'agendaForComp',
      header: false,
      allDaySlot: false,
      locale: "<%= I18n.locale %>",
      minTime: venueData.minTime,
      maxTime: venueData.maxTime,
      slotDuration: "00:30:00",
      height: "auto",
      defaultDate: "<%= competition.start_date %>",
      views: {
        agendaForComp: {
          type: 'agenda',
          duration: { days: <%= competition.number_of_days %> },
          buttonText: 'Calendar',
        },
      },
    }
    $elem.fullCalendar(options);
  }

  // Setup click event on "calendar" links (one for each venue)
  $(".schedule-calendar-link").click(function(e) {
    e.preventDefault();
    var venueId = $(this).data("venue");
    var idSelector = "#schedule-venue-" + venueId;
    $(idSelector + " .schedule_table_container").hide();
    $(idSelector + " .schedule-table-link").removeClass("active");
    $(idSelector + " .schedule_calendar_container").show();
    $(idSelector + " .schedule-calendar-link").addClass("active");
    $calendar = $("#calendar-venue-" + venueId);
    if (!$calendar.hasClass("initialized")) {
      $calendar.addClass("initialized");
      initFullCalendar($calendar, venueId);
    } else {
      $calendar.fullCalendar("refetchEvents");
    }
  });

  // Setup click event on "table" links (one for each venue)
  $(".schedule-table-link").click(function(e) {
    e.preventDefault();
    var venueId = $(this).data("venue");
    var idSelector = "#schedule-venue-" + venueId;
    $(idSelector + " .schedule_calendar_container").hide();
    $(idSelector + " .schedule-calendar-link").removeClass("active");
    $(idSelector + " .schedule_table_container").show();
    $(idSelector + " .schedule-table-link").addClass("active");
  });

  function hidePopovers() {
    $(".has-popover").popover("hide");
  }

  // Setup action for enabling/disabling a room in a venue
  // For the "table", we just need to hide the row matching ".room-roomId"
  // For the "calendar", we need to refetch events
  $(".toggle-room").click(function(e) {
    e.preventDefault();
    hidePopovers();
    var $elem = $(this);
    // Toggle the room line's status
    if ($elem.hasClass("selected")) {
      $elem.removeClass("selected");
      $elem.find("input").prop("checked", false);
    } else {
      $elem.addClass("selected");
      $elem.find("input").prop("checked", true);
    }
    // Avoid focus on the line
    $elem.blur();

    var roomId = $elem.data("room");
    var venueId = $elem.data("venue");

    // Action for the "table"
    $(".room-" + roomId).toggle();

    // Action for the calendar
    $calendar = $("#calendar-venue-" + venueId);
    var idSelector = "#schedule-venue-" + venueId;
    // Refetch event only if calendar is visible
    if ($(idSelector + " .schedule-calendar-link").hasClass("active")) {
      if ($calendar.hasClass("initialized")) {
        $calendar.fullCalendar("refetchEvents");
      }
    }
  });

function recomputeAll() {
  $(".events-filter .event-all").each(function(index, element) {
    let $elem = $(element);
    let all = $elem.parent().find(".cubing-icon");
    let selected = $elem.parent().find(".cubing-icon.selected");
    if (all.length != selected.length) {
      $elem.removeClass("selected");
    } else {
      if (!$elem.hasClass("selected")) {
        $elem.addClass("selected");
      }
    }
  });
}


$(".events-filter .event-all").click(function(e) {
  let $elem = $(this);
  let $filter = $elem.parent();
  if ($elem.hasClass("selected")) {
    $filter.find(".cubing-icon.selected").each(function(index, element) {
      $eventElem = $(element);
      $eventElem.removeClass("selected");
      let eventId = $eventElem.data("event");
      $(".schedule-table .event-" + eventId).toggle();
    });
    $elem.removeClass("selected");
  } else {
    $filter.find(".cubing-icon:not(.selected)").each(function(index, element) {
      $eventElem = $(element);
      $eventElem.addClass("selected");
      let eventId = $eventElem.data("event");
      $(".schedule-table .event-" + eventId).toggle();
    });
    $elem.addClass("selected");
  }
  let venueId = $elem.parent().data("venue");
  $calendar = $("#calendar-venue-" + venueId);
  var idSelector = "#schedule-venue-" + venueId;
  // Refetch event only if calendar is visible
  if ($(idSelector + " .schedule-calendar-link").hasClass("active")) {
    if ($calendar.hasClass("initialized")) {
      $calendar.fullCalendar("refetchEvents");
    }
  }
});

$(".events-filter span.cubing-icon").click(function(e) {
  let $elem = $(this);
  if ($elem.hasClass("selected")) {
    $elem.removeClass("selected");
  } else {
    $elem.addClass("selected");
  }
  // Table action
  let eventId = $elem.data("event");
  $(".schedule-table .event-" + eventId).toggle();
  // Calendar action
  let venueId = $elem.parent().data("venue");
  $calendar = $("#calendar-venue-" + venueId);
  var idSelector = "#schedule-venue-" + venueId;
  // Refetch event only if calendar is visible
  if ($(idSelector + " .schedule-calendar-link").hasClass("active")) {
    if ($calendar.hasClass("initialized")) {
      $calendar.fullCalendar("refetchEvents");
    }
  }
  recomputeAll();
});

  $('body').click(function(e) {
    hidePopovers();
  });
</script>
